{"version":3,"sources":["styles/global.ts","store/action.ts","store/reducer.ts","store/store.ts","components/Calender/style.tsx","styles/color.ts","components/CalenderHeader/style.tsx","components/CalenderHeader/index.tsx","components/CalenderDates/style.tsx","components/CalenderDates/prevMonth.tsx","components/CalenderDates/dates.tsx","components/CalenderDates/nextMonth.tsx","components/CalenderDates/index.tsx","components/CalenderMain/style.tsx","components/CalenderMain/index.tsx","components/Calender/index.tsx","styles/style.ts","App.tsx","index.tsx"],"names":["CSSVariable","GlobalStyle","createGlobalStyle","reset","PREV","NEXT","Calender","DISPLAYNUM","curDate","Date","today","monthNames","dates","prevLast","getFullYear","getMonth","curFirst","curLast","changeState","state","calender","store","createStore","action","type","setMonth","payload","composeWithDevTools","styled","div","CSSColors","CalenderHeader","header","useSelector","dispatch","useDispatch","className","onClick","CalenderDates","ul","PrevMonth","prev","Dates","date","sat","sun","NextMonth","next","toDay","getDay","i","unshift","getDate","push","length","map","index","CalenderMain","main","day","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4deeeecc.chunk.js","sourcesContent":["import { createGlobalStyle } from 'styled-components';\nimport reset from 'styled-reset';\n\ninterface CSSVariableType {\n  fontFamily: string;\n  backgroundColor: string;\n}\n\nexport const CSSVariable: CSSVariableType = {\n  fontFamily: '\"Lobster\", cursive',\n  backgroundColor: '#c1aeee',\n};\n\nexport const GlobalStyle = createGlobalStyle`\n    ${reset}\n    html,\n    body,\n    div,\n    span,\n    applet,\n    object,\n    iframe,\n    h1,\n    h2,\n    h3,\n    h4,\n    h5,\n    h6,\n    p,\n    blockquote,\n    pre,\n    a,\n    abbr,\n    acronym,\n    address,\n    big,\n    cite,\n    code,\n    del,\n    dfn,\n    em,\n    img,\n    ins,\n    kbd,\n    q,\n    s,\n    samp,\n    small,\n    strike,\n    strong,\n    sub,\n    sup,\n    tt,\n    var,\n    b,\n    u,\n    i,\n    center,\n    dl,\n    dt,\n    dd,\n    ol,\n    ul,\n    li,\n    fieldset,\n    form,\n    label,\n    legend,\n    table,\n    caption,\n    tbody,\n    tfoot,\n    thead,\n    tr,\n    th,\n    td,\n    article,\n    aside,\n    canvas,\n    details,\n    embed,\n    figure,\n    figcaption,\n    footer,\n    header,\n    hgroup,\n    menu,\n    nav,\n    output,\n    ruby,\n    section,\n    summary,\n    time,\n    mark,\n    audio,\n    video {\n    margin: 0;\n    padding: 0;\n    border: 0;\n    font-size: 100%;\n    font: inherit;\n    vertical-align: baseline;\n    }\n    /* HTML5 display-role reset for older browsers */\n    article,\n    aside,\n    details,\n    figcaption,\n    figure,\n    footer,\n    header,\n    hgroup,\n    menu,\n    nav,\n    section {\n    display: block;\n    }\n    body {\n    line-height: 1;\n    }\n    ol,\n    ul {\n    list-style: none;\n    }\n    blockquote,\n    q {\n    quotes: none;\n    }\n    blockquote:before,\n    blockquote:after,\n    q:before,\n    q:after {\n    content: '';\n    content: none;\n    }\n    table {\n    border-collapse: collapse;\n    border-spacing: 0;\n    }\n    a,\n    a:hover,\n    a:visited {\n    text-decoration: none;\n    color: inherit;\n    }\n    input:focus,\n    button:focus,\n    select:focus,\n    textarea:focus {\n    outline: none;\n    }\n    button{\n    border: 0;\n    background-color: transparent;\n    cursor: pointer;\n    }\n    body {\n        align-items: center;\n        display: flex;\n        flex-direction: column;\n        top: 50%;\n        transform: translateY(50%);\n        background-color: ${CSSVariable.backgroundColor};\n        font-family: ${CSSVariable.fontFamily};\n    }\n`;\n\nexport default GlobalStyle;\n","export const PREV = 'PREV' as const;\nexport const NEXT = 'NEXT' as const;\n\nexport const prev = (payload: number) => ({ type: PREV, payload });\nexport const next = (payload: number) => ({ type: NEXT, payload });\n\nexport type HeaderAction = ReturnType<typeof prev> | ReturnType<typeof next>;\n","import { PREV, NEXT, HeaderAction } from './action';\n\nexport interface initialState {\n  DISPLAYNUM: number;\n  curDate: Date;\n  today: Date;\n  monthNames: Array<string>;\n}\n\nexport interface initialDates {\n  prevLast: Date;\n  curFirst: Date;\n  curLast: Date;\n}\n\nexport interface finalState extends initialState, initialDates {}\n\nconst Calender: initialState = {\n  DISPLAYNUM: 42,\n  curDate: new Date(),\n  today: new Date(),\n  monthNames: [\n    'January',\n    'February',\n    'March',\n    'April',\n    'May',\n    'June',\n    'July',\n    'August',\n    'September',\n    'October',\n    'November',\n    'December',\n  ],\n};\n\nconst dates: initialDates = {\n  prevLast: new Date(\n    Calender.curDate.getFullYear(),\n    Calender.curDate.getMonth(),\n    0,\n  ), // 저번달 말일을 저장\n  curFirst: new Date(\n    Calender.curDate.getFullYear(),\n    Calender.curDate.getMonth(),\n    1,\n  ), // 이번달 1일을 저장\n  curLast: new Date(\n    Calender.curDate.getFullYear(),\n    Calender.curDate.getMonth() + 1,\n    0,\n  ), // 이번달 말일을 저장\n};\n\nconst changeState = (state: finalState) => {\n  state.prevLast = new Date(\n    state.curDate.getFullYear(),\n    state.curDate.getMonth(),\n    0,\n  );\n  state.curFirst = new Date(\n    state.curDate.getFullYear(),\n    state.curDate.getMonth(),\n    1,\n  );\n  state.curLast = new Date(\n    state.curDate.getFullYear(),\n    state.curDate.getMonth() + 1,\n    0,\n  );\n};\n\nconst calender: finalState = { ...Calender, ...dates };\n\nexport function reducer(state = calender, action: HeaderAction) {\n  switch (action.type) {\n    case PREV:\n      state.curDate = new Date(state.curDate.setMonth(action.payload));\n      changeState(state);\n      return {\n        ...state,\n      };\n\n    case NEXT:\n      state.curDate = new Date(state.curDate.setMonth(action.payload));\n      changeState(state);\n      return {\n        ...state,\n      };\n\n    default:\n      return state;\n  }\n}\n","import { createStore } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { reducer } from './reducer';\n\nconst store = createStore(reducer, composeWithDevTools());\n\nexport default store;\n","import styled from 'styled-components';\n\nconst Calender = styled.div`\n  font-size: 1.3rem;\n  margin-top: 1rem;\n`;\n\nexport default Calender;\n","interface CSSColorsType {\n  bg: string;\n  line: string;\n  sat: string;\n  sun: string;\n  today: string;\n}\n\nexport const CSSColors: CSSColorsType = {\n  bg: '#f6f6ef' /* 배경색 */,\n  line: '#aaaaaa' /* 상단과 하단을 나눠줄 줄 색 */,\n  sat: '#8282ff' /* 토요일 배경색 */,\n  sun: '#ff88a7' /* 일요일 배경색 */,\n  today: '#ffb900' /* 오늘 날짜의 테투리색 */,\n};\n","import styled from 'styled-components';\nimport { CSSColors } from '../../styles/color';\n\nconst CalenderHeader = styled.header`\n  justify-content: center;\n  margin: auto;\n  display: flex;\n  .prev,\n  .next {\n    color: ${CSSColors.bg};\n    padding: auto;\n    font-size: 2rem;\n    border: none;\n    outline: none;\n  }\n  .currentMonth {\n    color: ${CSSColors.bg};\n    text-align: center;\n    width: 10rem;\n    margin: auto 2rem;\n  }\n`;\n\nexport default CalenderHeader;\n","import React, { ReactElement } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport StyledCalenderHeader from './style';\nimport { prev, next } from '../../store/action';\nimport { finalState } from '../../store/reducer';\n\nexport default function CalenderHeader(): ReactElement {\n  const calender = useSelector((state: finalState) => state);\n  const dispatch = useDispatch();\n  const { monthNames, curDate }: finalState = calender;\n\n  const prevMonth = () => {\n    dispatch(prev(curDate.getMonth() - 1));\n  };\n  const nextMonth = () => {\n    dispatch(next(curDate.getMonth() + 1));\n  };\n\n  return (\n    <StyledCalenderHeader>\n      <button type=\"button\" className=\"prev\" onClick={prevMonth}>\n        <i className=\"far fa-arrow-alt-circle-left\" />\n      </button>\n      <div className=\"currentMonth\">\n        {`${monthNames[curDate.getMonth()]}. ${curDate.getFullYear()}. `}\n      </div>\n      <button type=\"button\" className=\"next\" onClick={nextMonth}>\n        <i className=\"far fa-arrow-alt-circle-right\" />\n      </button>\n    </StyledCalenderHeader>\n  );\n}\n","import styled from 'styled-components';\nimport { CSSColors } from '../../styles/color';\n\nconst CalenderDates = styled.ul`\n  width: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  .date {\n    padding: 1rem 0;\n    width: calc(100% / 7);\n    text-align: center;\n    box-sizing: border-box;\n    border-right: 1px solid ${CSSColors.line};\n    border-bottom: 1px solid ${CSSColors.line};\n  }\n  .sat {\n    color: ${CSSColors.sat} !important;\n  }\n  .sun {\n    color: ${CSSColors.sun} !important;\n  }\n  .today {\n    background-origin: border-box;\n    background-color: ${CSSColors.today};\n  }\n  .prevMonth {\n    color: ${CSSColors.line} !important;\n  }\n  .nextMonth {\n    color: ${CSSColors.line} !important;\n  }\n`;\n\nexport default CalenderDates;\n","type PrevProps = {\n  prev: number;\n};\n\nexport default function PrevMonth({ prev }: PrevProps) {\n  return <li className=\"date prevMonth\">{prev}</li>;\n}\n","type DateProps = {\n  date: number;\n  today: boolean;\n  sat: boolean;\n  sun: boolean;\n};\n\nexport default function Dates({ date, today, sat, sun }: DateProps) {\n  return (\n    <li\n      className={`date${today === true ? ' today' : ''}${\n        sat === true ? ' sat' : ''\n      }${sun === true ? ' sun' : ''}`}\n    >\n      {date}\n    </li>\n  );\n}\n","type NextProps = {\n  next: number;\n};\n\nexport default function NextMonth({ next }: NextProps) {\n  return <li className=\"date nextMonth\">{next}</li>;\n}\n","import React, { ReactElement } from 'react';\nimport { useSelector } from 'react-redux';\nimport StyledCalenderDates from './style';\nimport PrevMonth from './prevMonth';\nimport Dates from './dates';\nimport NextMonth from './nextMonth';\nimport { finalState } from '../../store/reducer';\n\nexport default function CalenderDates(): ReactElement {\n  const calender = useSelector((state: finalState) => state);\n  const {\n    DISPLAYNUM,\n    curDate,\n    curFirst,\n    curLast,\n    prevLast,\n    today,\n  }: finalState = calender;\n\n  const prev: Array<number> = [];\n  const dates: Array<number> = [];\n  const next: Array<number> = [];\n\n  let toDay = false;\n  let sat = false;\n  let sun = false;\n  if (curFirst.getDay() !== 0) {\n    // 이번달 1일이 일요일이 아니면\n    for (let i = 0; i < curFirst.getDay(); i += 1) {\n      prev.unshift(prevLast.getDate() - i); // 지난달의 말일에서 i를 빼면서 달력을 채운다.\n    }\n  }\n  for (let i = 1; i <= curLast.getDate(); i += 1) {\n    // 이번 달의 말일의 요일을 센다\n    dates.push(i);\n  }\n  for (let i = 1; i <= DISPLAYNUM - prev.length - curLast.getDate(); i += 1) {\n    // 달력에 42일에 맞게 다음 달의 날짜를 가져온다.\n    next.push(i);\n  }\n\n  return (\n    <StyledCalenderDates>\n      {prev.map((prev) => (\n        <PrevMonth key={prev} prev={prev} />\n      ))}\n      {dates.map((dates, index) => {\n        toDay = false;\n        sun = false;\n        sat = false;\n        if (\n          today.getDate() === dates &&\n          today.getMonth() === curDate.getMonth() &&\n          today.getFullYear() === curDate.getFullYear()\n        ) {\n          toDay = true;\n        } else if ((prev.length + index + 1) % 7 === 0) {\n          // 일요일\n          sat = true;\n        } else if ((prev.length + index + 1) % 7 === 1) {\n          // 토요일\n          sun = true;\n        }\n        return (\n          <Dates key={dates} date={dates} today={toDay} sat={sat} sun={sun} />\n        );\n      })}\n      {next.map((next) => (\n        <NextMonth key={next} next={next} />\n      ))}\n    </StyledCalenderDates>\n  );\n}\n","import styled from 'styled-components';\nimport { CSSColors } from '../../styles/color';\n\nconst CalenderMain = styled.main`\n  background-color: ${CSSColors.bg};\n  width: 40rem;\n  margin-top: 1rem;\n  display: flex;\n  flex-direction: column;\n  .days {\n    padding: auto;\n    height: 3.5rem;\n    border-bottom: 2px solid ${CSSColors.line};\n    text-align: center;\n    display: flex;\n    flex-wrap: wrap;\n    width: 100%;\n    .day {\n      padding: 1rem;\n      margin: 0;\n      width: calc(100% / 7);\n      display: inline;\n      box-sizing: border-box;\n      border-right: 1px solid ${CSSColors.line};\n      border-top: 1px solid ${CSSColors.line};\n    }\n    .day:nth-child(7n + 1) {\n      color: ${CSSColors.sun};\n      border-left: 1px solid ${CSSColors.line};\n    }\n    .day:nth-child(7n) {\n      color: ${CSSColors.sat};\n    }\n  }\n`;\n\nexport default CalenderMain;\n","import React, { useState, useEffect, ReactElement } from 'react';\nimport CalenderDates from '../CalenderDates';\nimport StyledCalenderMain from './style';\n\nexport default function CalenderMain(): ReactElement {\n  const day: Array<string> = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];\n  return (\n    <StyledCalenderMain>\n      <ul className=\"days\">\n        {day.map((day) => (\n          <li key={day} className=\"day\">\n            {day}\n          </li>\n        ))}\n      </ul>\n      <CalenderDates />\n    </StyledCalenderMain>\n  );\n}\n","import React, { useState } from 'react';\nimport StyledCalender from './style';\nimport CalenderHeader from '../CalenderHeader';\nimport CalenderMain from '../CalenderMain';\n\nexport default function Calender() {\n  return (\n    <StyledCalender>\n      <CalenderHeader />\n      <CalenderMain />\n    </StyledCalender>\n  );\n}\n","import styled from 'styled-components';\nimport { CSSColors } from './color';\n\nconst App = styled.div`\n  .calenderTitle {\n    text-align: center;\n    font-size: 4rem;\n    color: ${CSSColors.bg};\n  }\n`;\n\nexport default App;\n","import Calender from './components/Calender';\nimport StyledApp from './styles/style';\n\nexport default function App() {\n  return (\n    <StyledApp>\n      <header className=\"calenderTitle\">Calender</header>\n      <Calender />\n    </StyledApp>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport GlobalStyle from './styles/global';\nimport store from './store/store';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n      <GlobalStyle />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}